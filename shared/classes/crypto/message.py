"""
–û–ø—Ä–µ–¥–µ–ª–µ–Ω –∫–ª–∞—Å—Å Message (—Å–æ–≥–ª–∞—Å–Ω–æ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º, –æ–ø–∏—Å–∞–Ω–Ω—ã–º –≤ wiki: https://github.com/hmxustin/pybchain/wiki/Message)
"""

from enum import Enum
from dataclasses import dataclass
from typing import Union

# region –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –æ–±—â–µ–≥–æ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è

BITS_IN_BYTE = 8
""" –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–∏—Ç–æ–≤ –≤ –±–∞–π—Ç–µ """

MIN_LENGTH = 0
""" –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –±–∏—Ç–∞—Ö """

MAX_LENGTH = 2**64
""" –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –±–∏—Ç–∞—Ö """

LENGTH_SIZE = 64
""" –†–∞–∑–º–µ—Ä –≤ –±–∏—Ç–∞—Ö —Å–ª–æ–≤–∞ (QWord), –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—é—â–µ–≥–æ —Å–æ–±–æ–π –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª–∏–Ω—ã —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –±–∏—Ç–∞—Ö """

DEF_ENCODING = 'utf-8'
""" –ö–æ–¥–∏—Ä–æ–≤–∫–∞ —Å—Ç—Ä–æ–∫–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é """

DEF_METHOD = 'sha256'
""" –ú–µ—Ç–æ–¥ —Ö–µ—à–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é """

EMPTY_MESSAGE = bytearray()
""" –ü—É—Å—Ç–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ """

# endregion

# region –°–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–∞—Ö

E_METHOD_TYPE = 'üö® –û—à–∏–±–æ—á–Ω—ã–π —Ç–∏–ø–∞ –¥–∞–Ω–Ω—ã—Ö {} –ø—Ä–∏ —É–∫–∞–∑–∞–Ω–∏–∏ –º–µ—Ç–æ–¥–∞ —Ö–µ—à–∏—Ä–æ–≤–∞–Ω–∏—è. –û–∂–∏–¥–∞–µ—Ç—Å—è —Å—Ç—Ä–æ–∫–∞ –∏–ª–∏ –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–∏–µ "Method"'
""" –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ —Ç–∏–ø–∞ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –º–µ—Ç–æ–¥–∞ —Ö–µ—à–∏—Ä–æ–≤–∞–Ω–∏—è """

E_METHOD_NAME = 'üö® –û—à–∏–±–æ—á–Ω–æ–µ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ {} –ø—Ä–∏ —É–∫–∞–∑–∞–Ω–∏–∏ –º–µ—Ç–æ–¥–∞ —Ö–µ—à–∏—Ä–æ–≤–∞–Ω–∏—è. –û–∂–∏–¥–∞–µ—Ç—Å—è —Å—Ç—Ä–æ–∫–∞, –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–Ω–∞—è –≤ "Method"'
""" –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ —É–∫–∞–∑–∞—Ç—å –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –¥–ª—è –º–µ—Ç–æ–¥–∞ —Ö–µ—à–∏—Ä–æ–≤–∞–Ω–∏—è (—É–∫–∞–∑–∞–Ω–∏–µ —á–µ—Ä–µ–∑ —Å—Ç—Ä–æ–∫—É) """

# endregion


@dataclass
class EncodingInfo:
    """ –°–≤–µ–¥–µ–Ω–∏—è –æ –∫–æ–¥–∏—Ä–æ–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è (–∫–∞–∫ —Å–ª–µ–¥—É–µ—Ç –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–æ–≤–æ–∫—É–ø–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö) """

    idx: int                                                          # –∏–Ω–¥–µ–∫—Å
    info: str                                                         # –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ
    readable: bool                                                    # –ø—Ä–∏–∑–Ω–∞–∫ —á–∏—Ç–∞–µ–º–æ—Å—Ç–∏ (—Å —Ç–æ—á–∫–∏ –∑—Ä–µ–Ω–∏—è —á–µ–ª–æ–≤–µ–∫–∞)


class Encoding(EncodingInfo, Enum):
    """ –ü–µ—Ä–µ—á–∏—Å–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–¥–∏—Ä–æ–≤–æ–∫ —Å–æ–æ–±—â–µ–Ω–∏—è (—Å–ø–æ—Å–æ–±–æ–≤ –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏–∏ —Å–æ–≤–æ–∫—É–ø–Ω–æ—Å—Ç–∏ –¥–∞–Ω–Ω—ã—Ö) """

    bnr = 100, 'bnr', False                                           # –ø—Ä–æ—Å—Ç–æ –±–∏–Ω–∞—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ, –Ω–µ –¥–ª—è —á—Ç–µ–Ω–∏—è (binary non-readable)
    binstr = 200, 'binstr', True                                      # –¥–∞–Ω–Ω—ã–µ –¥–æ–ª–∂–Ω—ã –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∏—Ä–æ–≤–∞—Ç—å—Å—è –∫–∞–∫ –±–∏–Ω–∞—Ä–Ω–∞—è —Å—Ç—Ä–æ–∫–∞
    hexstr = 201, 'hexstr', True                                      # –¥–∞–Ω–Ω—ã–µ –¥–æ–ª–∂–Ω—ã –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∏—Ä–æ–≤–∞—Ç—å—Å—è –∫–∞–∫ —à–µ—Å—Ç–Ω–∞–¥—Ü–∞—Ç–µ—Ä–∏—á–Ω–∞—è —Å—Ç—Ä–æ–∫–∞
    utf8 = 300, 'utf-8', True                                         # —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –∫–æ–¥–∏—Ä–æ–≤–∫–∞ (—á–µ–ª–æ–≤–µ–∫–æ-—á–∏—Ç–∞–µ–º—ã–π —Ç–µ–∫—Å—Ç)
    cp1251 = 301, 'cp1251', True                                      # –º–æ–∂–µ—Ç –±—ã—Ç—å —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ...
    cp866 = 302, 'cp866', True                                        # ... —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ —Ä–∞–∑–≤–∏—Ç–∏—è –ø—Ä–æ–µ–∫—Ç–∞
    koi8r = 303, 'koi8-r', True                                       # ...

    # todo –î–æ–±–∞–≤—å—Ç–µ –Ω–∏–∂–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∫–æ–¥–∏—Ä–æ–≤–∫—É –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ: –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä = –∏–Ω–¥–µ–∫—Å, '–Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ', –ø—Ä–∏–∑–Ω–∞–∫ —á–∏—Ç–∞–µ–º–æ—Å—Ç–∏


@dataclass
class MethodInfo:
    """ –°–≤–µ–¥–µ–Ω–∏—è –æ –º–µ—Ç–æ–¥–µ —Ö–µ—à–∏—Ä–æ–≤–∞–Ω–∏—è (–∫–∞–∫–æ–π –º–µ—Ç–æ–¥ —Å–ª–µ–¥—É–µ—Ç –ø—Ä–∏–º–µ–Ω–∏—Ç—å –∫ —Å–æ–≤–æ–∫—É–ø–Ω–æ—Å—Ç–∏ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ –≤—ã–∑–æ–≤–µ hash()) """

    idx: int                                                          # –∏–Ω–¥–µ–∫—Å
    info: str                                                         # –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ
    acceleration: bool                                                # –¥–æ—Å—Ç—É–ø–Ω–æ –ª–∏ –∞–ø–ø–∞—Ä–∞—Ç–Ω–æ–µ —É—Å–∫–æ—Ä–µ–Ω–∏–µ


class Method(MethodInfo, Enum):
    """ –ü–µ—Ä–µ—á–∏—Å–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –º–µ—Ç–æ–¥–æ–≤ —Ö–µ—à–∏—Ä–æ–≤–∞–Ω–∏—è """

    sha256 = 10, 'sha-256', True                                      # –º–µ—Ç–æ–¥ sha-256 —Å —É—Å–∫–æ—Ä–µ–Ω–∏–µ–º –Ω–∞ —É—Ä–æ–≤–Ω–µ CPU (Intel¬Æ SHA Extensions)

    # todo –î–æ–±–∞–≤—å—Ç–µ –Ω–∏–∂–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –º–µ—Ç–æ–¥ —Ö–µ—à–∏—Ä–æ–≤–∞–Ω–∏—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ: –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä = –∏–Ω–¥–µ–∫—Å, '–Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ', –∏–º–µ–µ—Ç –ª–∏ –∞–ø–ø–∞—Ä–∞—Ç–Ω–æ–µ —É—Å–∫–æ—Ä–µ–Ω–∏–µ


TData = Union[str, bytes, bytearray]
""" –î–æ–ø—É—Å—Ç–∏–º—ã–µ —Ç–∏–ø—ã –≤—Ö–æ–¥—è—â–∏—Ö (–∏—Å—Ö–æ–¥–Ω—ã—Ö) –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è """

TEncoding = Union[Encoding, str]
""" –î–æ–ø—É—Å—Ç–∏–º—ã–µ —Ç–∏–ø—ã –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∫–æ–¥–∏—Ä–æ–≤–∫–∏ """

TMethod = Union[Method, str]
""" –î–æ–ø—É—Å—Ç–∏–º—ã–µ —Ç–∏–ø—ã –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –º–µ—Ç–æ–¥–∞ —Ö–µ—à–∏—Ä–æ–≤–∞–Ω–∏—è """


class Message:
    """ –°–æ–æ–±—â–µ–Ω–∏–µ, –ø–æ–¥–ª–µ–∂–∞—â–µ–µ —Ö–µ—à–∏—Ä–æ–≤–∞–Ω–∏—é (—Å–æ–≤–æ–∫—É–ø–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö, –æ–ø–∏—Å–∞–Ω–Ω–∞—è –≤ —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏–∏) """

    def __init__(self, data: TData = EMPTY_MESSAGE, encoding: TEncoding = Encoding.utf8, method: TMethod = Method.sha256) -> None:
        """
        –ú–µ—Ç–æ–¥ —Å–æ–∑–¥–∞–Ω–∏—è —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –∫–ª–∞—Å—Å–∞ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞—á–∞–ª—å–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π

        :param data: –∏—Å—Ö–æ–¥–Ω–∞—è —Å–æ–≤–æ–∫—É–ø–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö
        :param encoding: –∫–æ–¥–∏—Ä–æ–≤–∫–∞ (—Å–ø–æ—Å–æ–± –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏–∏ –∏—Å—Ö–æ–¥–Ω–æ–π —Å–æ–≤–æ–∫—É–ø–Ω–æ—Å—Ç–∏ –¥–∞–Ω–Ω—ã—Ö)
        :param method: –º–µ—Ç–æ–¥ —Ö–µ—à–∏—Ä–æ–≤–∞–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–π —Ç—Ä–µ–±—É–µ—Ç—Å—è –ø—Ä–∏–º–µ–Ω–∏—Ç—å –∫ –∏—Å—Ö–æ–¥–Ω–æ–π —Å–æ–≤–æ–∫—É–ø–Ω–æ—Å—Ç–∏ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ –≤—ã–∑–æ–≤–µ hash()
        :return: ``None``
        """
        ...

        self._method: Method                                          # –∏–Ω–∏—Ü–∏–∞—Ü–∏—è –º–µ—Ç–æ–¥–∞ —Ö–µ—à–∏—Ä–æ–≤–∞–Ω–∏—è
        self._set_method(method)

    def _set_method(self, method: Method) -> None:
        """
        –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –º–µ—Ç–æ–¥–∞ —Ö–µ—à–∏—Ä–æ–≤–∞–Ω–∏—è –∏—Å—Ö–æ–¥–Ω–æ–π —Å–æ–≤–æ–∫—É–ø–Ω–æ—Å—Ç–∏ –¥–∞–Ω–Ω—ã—Ö

        :param method: –º–µ—Ç–æ–¥ —Ö–µ—à–∏—Ä–æ–≤–∞–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–π —Ç—Ä–µ–±—É–µ—Ç—Å—è –ø—Ä–∏–º–µ–Ω–∏—Ç—å –∫ –∏—Å—Ö–æ–¥–Ω–æ–π —Å–æ–≤–æ–∫—É–ø–Ω–æ—Å—Ç–∏ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ –≤—ã–∑–æ–≤–µ hash()
        :return: ``None``
        """

        t = type(method)

        if t is str:
            found = None
            for i in Method:
                if method == i.info:
                    found = i
                    break

            if not found:
                raise ValueError(E_METHOD_NAME.format(method))

            self._method = found
            return

        if t is Method:
            self._method = method
            return

        raise TypeError(E_METHOD_TYPE.format(t))


