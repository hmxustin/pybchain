from pytest import raises as _

from shared.classes.crypto.message import *


def testp_initialization():
    # можно указать метод хеширования сообщения в виде строки (реальное значение все равно будет установлено из перечисления Method)
    m = Message(method='sha-256')                                     # задаем значение строкой
    assert m.method == Method.sha256                                  # проверяем, что мы получаем элемент перечисления
    assert m.method.nme == 'sha-256'                                  # проверяем имя

    # можно указать метод и через перечисление Method (это и является целевым способом)
    m = Message(method=Method.sha256)                                 # задаем перечислимым типом
    assert m.method.nme == 'sha-256'                                  # проверяем, что нужное значение установилось

    # указать кодировку (способ интерпретации данных) можно в виде строки (реальное значение все равно будет установлено типа Encoding)
    m = Message(encoding='bin')                                       # задаем значение строкой (можно: bnr, bin, hex, utf-8 и т.д.)
    assert m.encoding == Encoding.bin                                 # проверяем, что мы получаем конкретный элемент перечисления
    assert m.encoding.nme == 'bin'                                    # проверяем, что имя элемента перечисления указано верно

    # можно указать кодировку через перечисление Encoding (это и является целевым способом)
    m = Message(encoding=Encoding.utf8, method=Method.sha256)         # задаем значения целевым способом
    assert m.encoding.nme == 'utf-8'                                  # проверяем, что там установилось
    assert m.method.nme == 'sha-256'                                  # проверяем, что там установилось

    # можно изменить ранее установленное значение через обращение к свойствам
    m.method = Method.sha256                                          # ну, допустим мы меняем
    m.encoding = Encoding.bin                                         # устанавливаем другое значение
    assert m.encoding.nme == 'bin'                                    # проверяем, что там установилось
    assert m.method.nme == 'sha-256'                                  # проверяем, что там установилось


def testn_initialization():
    # при попытке указать в качестве метода хеширование что-либо кроме строки или Method, будет поднято исключение (несоответствие типов)
    with _(TypeError):
        m = Message(method=False)                                     # noqa тестируем попытку установить в качестве метода будево значение

    # при попытке строку, которой нет в Method (тип правильный, но значение не правильное), будет поднято исключение (ошибочное значение)
    with _(ValueError):
        m = Message(method='unknown')                                 # тестируем попытку установить в качестве метода "левую" строку

    with _(TypeError):
        m = Message(encoding=1.2)                                     # noqa тестируем попытку установить кодировку через вещественное число

    with _(ValueError):
        m = Message(encoding='bmp')                                   # тестируем попытку установить в качестве кодировки "левый" формат

